import os
import shutil
import time
import win32api

def sid2user(sid):
    try:
        key = OpenKey(HKEY_LOCAL_MACHINE, "SOFTWARE\Microsoft\Windows_NT\CurrentVersion\ProfileList"
                      + '\\' + sid)
        (value, type) = QueryValueEx(key, 'ProfileImagePath')
        user = value.split('\\')[-1]
        return user
    except:
        return sid

def returnDir():
    dirs=['C:\\Recycler\\','C:\\Recycled\\','C:\\$Recycle.Bin\\']
    for recycleDir in dirs:
        if os.path.isdir(recycleDir):
            return recycleDir
    return None

def findRecycled(recycleDir, max_age, copy_dir):
    if recycleDir is None:
        print("No Recycle Bin directory found")
        return

    dirList = os.listdir(recycleDir)
    for sid in dirList:
        files = os.listdir(recycleDir + sid)
        user = sid2user(sid)
        print('\n[*] Listing Files For User: ' + str(user))
        for file in files:
            file_path = recycleDir + sid + "\\" + file
            file_age = time.time() - os.path.getmtime(file_path)
            if file_age > max_age:
                print("[*] Deleting File: " + file_path)
                os.remove(file_path)
            else:
                file_info = win32api.GetFileAttributes(recycleDir + sid + "\\" + file)
                original_name = win32api.GetShortPathName(recycleDir + sid + "\\" + file)
                print('[+] Found File: ' + str(original_name) + ' (size: ' + str(file_info[6]) + ' bytes)')
                shutil.copy(file_path, copy_dir)

if __name__ == '__main__':
    recycleDir = returnDir()
    if recycleDir is None:
        print("No Recycle Bin directory found")
    else:
        max_age = 7 * 24 * 60 * 60 # 1 week in seconds
        copy_dir = "C:\\RecycleBinBackups\\"
        if not os.path.exists(copy_dir):
            os.makedirs(copy_dir)
        findRecycled(recycleDir, max_age, copy_dir)
